server.port=8085

## Straddle Inputs
#change to false if do not want to close the trade even the target is achieved
app.straddle.closeOnTarget=true

#change to false if do not want to close the trade even the SL hits
app.straddle.useStopLoss=true

#Data directory path, where this will creates the xlsx file with positions holding
app.strangle.dataDir=D:\\Other\\trades\\paper\\sm-strangle-week

#NIFTY or BANKNIFTY only
app.strangle.opstSymbol=BANKNIFTY

#NIFTY min 75 or multiplies of 75, BANKNIFTY  min 25 or multiplies of 25
app.strangle.qty=25

#Select options near delta value
app.strangle.deltaVal=15

#if option not found with above delta value, add or substract with below and find the option (If above value is 15, with this it will check for 16, 17, and 18)
app.strangle.deltaPlusOrMinus=3

#Expected profit in percentage of collected premium
#Eg. Assume below value is 80 and Collected CE premium 100 and PE premium 100
# Total collected premium 200 and target 160 points, qty X 160 is the target
app.strangle.targetPercInNetPrem=80

#Start doing adjustment when the price difference between (in percentage) PE and CE is greater than or equal to below number
app.strangle.adjustmentPerc=50

#Keep CE and PE price difference 80% at the end of the day 
app.strangle.adjustAtEnd=true

#Keep CE and PE price difference 80% at the end of the day if it's less than 80
app.strangle.keepCePeDiffPercAtEnd=80

#30 seconds
app.strangle.cron.expression=0/30 * * * * ?


logging.pattern.console=
logging.file.name=${app.strangle.dataDir}\\logs.log
logging.logback.rollingpolicy.max-history=1
# OFF << FATAL << ERROR << WARN << INFO << DEBUG << TRACE << ALL
logging.level.root=INFO
spring.banner.location=classpath:banner.txt